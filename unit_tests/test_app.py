import unittest
from unittest.mock import patch

import numpy

from image_handler import histogramme, moyenne


class Testhistogramme(unittest.TestCase):
    def test_calc_histogramme(self):
        # Given
        expected_value = [4., 5., 5., 4., 4., 7., 9., 19., 8., 6., 10., 17., 17., 16., 9., 4.]

        image_data = [
            10, 11, 10, 12, 12, 12, 11, 12, 11, 10, 12, 7, 11, 11, 11, 12, 10, 9, 8, 8, 7, 7, 7, 7, 13, 12,
            11, 10, 9, 8, 7, 7, 7, 6, 6,
            8, 13, 11, 11, 10, 8, 7, 6, 6, 5, 6, 5, 7, 14, 12, 11, 12, 7, 7, 4, 4, 4, 6, 5, 5, 13, 14, 13, 14,
            8, 7, 5, 6, 5, 4, 3, 5, 14, 15, 15, 13, 9, 9, 7, 7, 6,
            6, 7, 7, 12, 12, 11, 13, 10, 7, 8, 9, 8, 7, 9, 11, 3, 0, 2, 1, 3, 10, 11, 12, 11, 10, 11, 12, 2,
            3, 2, 1, 2, 10, 12, 13, 13, 14, 13, 13, 2, 0, 0, 0, 11, 12, 13, 14, 13, 14, 14, 15, 1, 1, 1, 11,
            12, 13, 13, 13, 12, 13, 14, 15]

        # When
        result = list(histogramme(image_data, 15))

        print(result)

        # Then
        assert expected_value == result

    def test_calc_histogramme_with_negative(self):
        # Given
        image_data = [
            -10, 11, 10, 12, 12, 12, 11, 12, 11, 10, 12, 7, 11, 11, 11, 12, 10, 9, 8, 8, 7, 7, 7, 7, 13, 12,
            11, 10, 9, 8, 7, 7, 7, 6, 6,
            8, 13, 11, 11, 10, 8, 7, 6, 6, 5, 6, 5, 7, 14, 12, 11, 12, 7, 7, 4, 4, 4, 6, 5, 5, 13, 14, 13, 14,
            8, 7, 5, 6, 5, 4, 3, 5, 14, 15, 15, 13, 9, 9, 7, 7, 6,
            6, 7, 7, 12, 12, 11, 13, 10, 7, 8, 9, 8, 7, 9, 11, 3, 0, 2, 1, 3, 10, 11, 12, 11, 10, 11, 12, 2,
            3, 2, 1, 2, 10, 12, 13, 13, 14, 13, 13, 2, 0, 0, 0, 11, 12, 13, 14, 13, 14, 14, 15, 1, 1, 1, 11,
            12, 13, 13, 13, 12, 13, 14, 15]

        self.assertRaises(ValueError, histogramme, image_data, 15)


class TestMoyenne(unittest.TestCase):
    def test_calc_moyenne(self):
        #Given
        expected_value = 8.806
        image_data = [
            10, 11, 10, 12, 12, 12, 11, 12, 11, 10, 12, 7, 11, 11, 11, 12, 10, 9, 8, 8, 7, 7, 7, 7, 13, 12,
            11, 10, 9, 8, 7, 7, 7, 6, 6,
            8, 13, 11, 11, 10, 8, 7, 6, 6, 5, 6, 5, 7, 14, 12, 11, 12, 7, 7, 4, 4, 4, 6, 5, 5, 13, 14, 13, 14,
            8, 7, 5, 6, 5, 4, 3, 5, 14, 15, 15, 13, 9, 9, 7, 7, 6,
            6, 7, 7, 12, 12, 11, 13, 10, 7, 8, 9, 8, 7, 9, 11, 3, 0, 2, 1, 3, 10, 11, 12, 11, 10, 11, 12, 2,
            3, 2, 1, 2, 10, 12, 13, 13, 14, 13, 13, 2, 0, 0, 0, 11, 12, 13, 14, 13, 14, 14, 15, 1, 1, 1, 11,
            12, 13, 13, 13, 12, 13, 14, 15]

        #When
        result = moyenne(image_data)
        #Then
        self.assertEqual(expected_value, result)

if __name__ == '__main__':
    unittest.main()
